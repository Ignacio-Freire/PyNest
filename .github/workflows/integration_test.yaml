name: Integration Test

on: [push, workflow_call]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app_type: ["Blank", "SyncORM"]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Start Application
        run: |
          if [ "${{ matrix.app_type }}" == "Blank" ]; then
            app_name="NestApp"
            port="8000"
            is_async=""
          elif [ "${{ matrix.app_type }}" == "SyncORM" ]; then
            app_name="ORMNestApp"
            port="8080"
            is_async=""
          elif [ "${{ matrix.app_type }}" == "AsyncORM" ]; then
            app_name="AsyncORMNestApp"
            port="8088"
            is_async="--is-async"
          fi

          if [ "${{ matrix.app_type }}" == "Blank" ]; then
            pynest create-nest-app -n "$app_name"
          else
            pynest create-nest-app -n "$app_name" -db sqlite $is_async
          fi

          cd "$app_name"
          pynest g module -n user
          uvicorn "app:app" --host "0.0.0.0" --port "$port" --reload &

      - name: Wait for the server to start
        run: sleep 10

      - name: Test the application
        run: |
          curl -f http://0.0.0.0:"$port"/docs
          curl -f -X 'POST' \
            "http://0.0.0.0:"$port"/user/" \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{"name": "Example Name"}'
          curl -f http://0.0.0.0:"$port"/user/

      - name: Kill the server
        run: kill $(jobs -p) || true
